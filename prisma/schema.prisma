generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum Status {
  OPEN
  CLOSED
  FILLED
}

enum ApplicationStatus {
  NOT_APPLIED
  IN_PROGRESS
  APPLIED
  ACCEPTED
  REJECTED
}

model User {
  id           String        @id @default(cuid())
  name         String?
  email        String        @unique
  image        String?
  role         Role          @default(USER)
  applications Application[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Internship {
  id              String        @id @default(cuid())
  companyName     String
  position        String
  location        String
  applicationLink String
  deadline        DateTime
  description     String?
  requirements    String?
  status          Status        @default(OPEN)
  createdBy       String // Admin who created this
  applications    Application[]
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model Application {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Basic Information
  companyName     String
  position        String
  location        String
  applicationLink String?
  deadline        DateTime
  description     String   @db.Text
  requirements    String[] // Array of requirement strings
  salary          String?

  // Application Status
  status ApplicationStatus @default(NOT_APPLIED)

  // Timeline tracking (for graphs and analytics)
  appliedDate      DateTime?
  lastStatusChange DateTime?

  // Notes and tracking
  notes String? @db.Text

  // Relations
  userId       String // For authentication
  User         User        @relation(fields: [userId], references: [id])
  Internship   Internship? @relation(fields: [internshipId], references: [id])
  internshipId String?

  @@index([userId])
  @@index([status])
  @@index([deadline])
}
